{"version":3,"file":"ThinStorage.js","sources":["../lib/Document.js","../lib/ThinStorage.js"],"sourcesContent":["/**\n * Holds a reference to a document in the storage.\n * The reference can be swapped using the {Document.set} method,\n * which in turn allows updating documents in the set without removing them.\n * @class\n * @internal\n */\nclass Document {\n  /**\n   * Creates a new instance. Requires a target document object.\n   * @param target {object} the document object to point to.\n   * @constructor\n   */\n  constructor (target) { this.set(target) }\n\n  /**\n   * Returns the referenced document.\n   * @method\n   * @returns {object}\n   */\n  get () { return refs.get(this) }\n\n  /**\n   * Establishes a reference (= points) to the target document object.\n   * @method\n   * @throws {TypeError} if the document is not of type 'object'\n   * @param target {object} the document object to point to\n   */\n  set (target) {\n    if (typeof target !== 'object') {\n      throw new TypeError(`Expected object, got ${target}`)\n    }\n    refs.set(this, target)\n  }\n}\n\n/**\n * Stores the actual reference to the documents.\n * Each reference is keyed by each {Document} instance.\n * @type {WeakMap<object, object>}\n * @private\n */\nconst refs = new WeakMap()\n\n/**\n * Creates a new Document instance by given document object\n * @param doc {object} the document object to reference\n * @return {Document} a Document instance\n */\nexport const createDocument = doc => new Document(doc)\n","import { createDocument } from './Document.js'\n\n/**\n * Minimal storage interface using a middleware stack.\n * Documentation: https://github.com/jankapunkt/thin-storage\n */\nexport class ThinStorage {\n  /**\n   * creates a new instance\n   * @param {object=} options\n   * @param {string} [options.set=new Set()] provide your own set, for example to make it observable with Vue refs\n   * @param {string} [options.name='storage'] name of this storage, passed to middleware\n   * @param {string} [options.primary='id'] primary key property name, passed to middleware\n   * @param {function} [options.idGen=function():string] override id generation, applies only if no middleware is used\n   * @param {object[]|object} [options.handler=[]] the middleware stack of handlers\n   */\n  constructor (options = {}) {\n    this.documents = options.set || new Set()\n    this.keys = new Map()\n    this.hooks = new Map()\n\n    this.name = options.name || 'storage'\n    this.primary = options.primary || 'id'\n    this.idGen = options.idGen || incrementKey\n    this.handler = options.handler ? toArray(options.handler) : []\n\n    this.handler.forEach(h => {\n      this.hasInsert = this.hasInsert || !!h.insert\n      this.hasUpdate = this.hasUpdate || !!h.update\n      this.hasRemove = this.hasRemove || !!h.remove\n      this.hasFetch = this.hasFetch || !!h.fetch\n    })\n  }\n\n  /**\n   * Adds a new listener function to a given event.\n   * @param name {string} name of the event\n   * @param fn {function} handler to run on emit\n   * @return {function(): *} returns a function to remove the listener\n   */\n  on (name, fn) {\n    this.hooks.get(name)?.add(fn) || this.hooks.set(name, new Set([fn]))\n    return () => this.hooks.get(name).remove(fn)\n  }\n\n  /**\n   * Clears the local documents without informing the middleware.\n   * @fires Storage#remove\n   * @fires Storage#change\n   */\n  clear () {\n    this.documents.clear()\n    const keys = [...this.keys.keys()]\n    this.keys.clear()\n\n    /**\n     * remove event.\n     *\n     * @event Storage#remove\n     * @type {object}\n     * @property {string[]} keys - the list of removed keys\n     */\n    emit(this, 'remove', { documents: keys })\n\n    /**\n     * change event.\n     *\n     * @event Storage#change\n     * @type {object}\n     * @property {string} type - the type this change is associated with\n     */\n    emit(this, 'change', { type: 'clear' })\n  }\n\n  /**\n   * Retrieves documents from a remote source through\n   * handlers. If no handlers implement the fetch method then\n   * nothing is retrieved and -1 is returned.\n   *\n   * @param query {object}\n   * @param options {object=}\n   * @fires Storage#fetch\n   * @fires Storage#change\n   * @throws {Error} if any fetched document contains no primary key\n   * @return {Promise<number>}\n   */\n  async fetch (query, options) {\n    if (!this.hasFetch) { return -1 }\n\n    let fetched = []\n    const fetchOptions = { ...options, ...getOptions(this) }\n\n    for (const handler of this.handler) {\n      if (handler.fetch) {\n        fetched = await handler.fetch(query, fetchOptions, fetched)\n      }\n    }\n\n    fetched.forEach((doc, i) => {\n      const key = doc[this.primary]\n\n      if (!key) {\n        throw new Error(`Expected fetched document at index ${i} to have primary key \"${this.primary}\"`)\n      }\n\n      if (this.keys.has(key)) {\n        const original = this.keys.get(key)\n        original.set(doc)\n      } else {\n        const wrapped = createDocument(doc)\n        this.keys.set(key, wrapped)\n        this.documents.add(wrapped)\n      }\n    })\n\n    /**\n     * fetch event.\n     *\n     * @event Storage#fetch\n     * @type {object}\n     * @property {object[]} documents - the list of fetched document objects\n     */\n    emit(this, 'fetch', { documents: fetched })\n    emit(this, 'change', { type: 'fetch' })\n    return fetched.length\n  }\n\n  /**\n   *  Inserts new documents into the storage.\n   *\n   *  If middleware does not exist, it simply inserts\n   *  the documents with a default primary key (incremented number).\n   *\n   *  Otherwise, it runs the middleware stack on the shallow copies of the docs.\n   *  Handlers might even alter the size and the signature of the docs\n   *  as long as the last return value is the array with the primary keys\n   *  which is also passed as third argument in order to allow\n   *  throughput until the end, in case it has been created\n   *  before the last handler in the stack.\n   *\n   *  There is no insert operation, if any middleware throws an error.\n   *\n   * @param {object|object[]} documents\n   * @fires Storage#insert\n   * @fires Storage#change\n   * @throws {Error} if handler returns a list of primaries with a different length of documents to be inserted\n   * @return {Promise<Array.<Object>>}\n   */\n  async insert (documents = []) {\n    documents = toArray(documents)\n    const local = copy(documents)\n    let primaries = []\n\n    if (this.hasInsert) {\n      const options = getOptions(this)\n\n      for (const handler of this.handler) {\n        if (handler.insert) {\n          primaries = await handler.insert(local, options, primaries)\n        }\n      }\n\n      if (!primaries || primaries.length !== local.length) {\n        throw new Error(`Insert return values expected to be of length (${primaries.length}), got (${local.length}) in storage ${this.name}`)\n      }\n    } else {\n      primaries.length = local.length\n\n      for (let i = 0; i < local.length; i++) {\n        primaries[i] = await this.idGen()\n      }\n    }\n    local.forEach((doc, index) => {\n      const key = primaries[index]\n      doc[this.primary] = key\n\n      const wrapped = createDocument(doc)\n      this.keys.set(key, wrapped)\n      this.documents.add(wrapped)\n    })\n\n    /**\n     * insert event.\n     *\n     * @event Storage#insert\n     * @type {object}\n     * @property {object[]} documents - the list of inserted document objects\n     */\n    emit(this, 'insert', { documents: local })\n    emit(this, 'change', { type: 'insert' })\n    return primaries\n  }\n\n  /**\n   * Updates documents by a given query and modifier.\n   * If no middleware exists then the update is applied immediately.\n   * Otherwise, it runs through all functions in the middleware stack\n   * and awaits the updated array as result.\n   *\n   * The updated array must be the same length as the documents selected.\n   * Note: middleware can alter or filter the documents.\n   *\n   * If a middleware throws an error then there will be no update at all.\n   *\n   * @param {object} query\n   * @param {object} [options={}]\n   * @param {boolean} [options.strict=] optional strict mode used to check for equal length queried and updated docs\n   * @param {boolean} [options.strict=false]\n   * @return {Promise<*>}\n   */\n  async update (query, modifier = {}, options = {}) {\n    const local = copy(this.find(query, options))\n    const entries = Object.entries(modifier)\n    let updated = local.map(doc => {\n      const copy = ({ ...doc })\n\n      entries.forEach(([key, value]) => {\n        const val = typeof value === 'function'\n          ? value(copy[key])\n          : value\n        if (val === null) {\n          delete copy[key]\n        } else if (val !== undefined) {\n          copy[key] = val\n        }\n      })\n      return copy\n    })\n\n    if (this.hasUpdate) {\n      const updateOptions = { ...options, ...getOptions(this) }\n      for (const handler of this.handler) {\n        if (handler.update) {\n          updated = await handler.update(local, modifier, updateOptions, updated)\n        }\n      }\n\n      if (options.strict && updated.length !== local.length) {\n        throw new Error(`Update return values expected to be of length (${local.length}), got (${updated.length}) in storage ${this.name}`)\n      }\n    }\n\n    updated.forEach(doc => {\n      const key = doc[this.primary]\n      const wrapped = this.keys.get(key)\n\n      if (!wrapped) {\n        throw new Error(`Doc not found by primary key ${key} in storage ${this.name}`)\n      }\n\n      wrapped.set(doc)\n    })\n\n    emit(this, 'update', { documents: updated })\n    emit(this, 'change', { type: 'update' })\n    return updated.length\n  }\n\n  /**\n   * Removes documents from the storage by given query.\n   * If a middleware with remove implementation does not exist then the change is applied immediately.\n   * @param query {object|string|string[]|function}\n   * @param {object} [options={}]\n   * @param {boolean} [options.strict=] optional strict mode used to check for equal length queried and removed docs\n   * @return {Promise<number>} the number of removed documents\n   */\n  async remove (query, options = {}) {\n    const local = copy(this.find(query, options))\n    let removed = local.map(doc => doc[this.primary])\n\n    if (this.hasRemove) {\n      const removeOptions = { ...options, ...getOptions(this) }\n\n      for (const handler of this.handler) {\n        if (handler.remove) {\n          removed = await handler.remove(local, removeOptions, removed)\n        }\n      }\n      if (options.strict && removed.length !== local.length) {\n        throw new Error(`Remove return values expected to be of length (${local.length}), got (${removed.length}) in storage ${this.name}`)\n      }\n    }\n\n    removed.forEach(key => {\n      const original = this.keys.get(key)\n\n      if (!original) {\n        throw new Error(`Doc not found by primary key ${key} in storage ${this.name}`)\n      }\n\n      this.documents.delete(original)\n      this.keys.delete(key)\n    })\n\n    emit(this, 'remove', { documents: removed })\n    emit(this, 'change', { type: 'remove' })\n    return removed.length\n  }\n\n  /**\n   * Select documents from the set by a given selector pattern (query).\n   * @param {object|object[]|string|string[]|function|undefined} query\n   * @param {object} [options={}]\n   * @param {boolean} [options.loose=] use to check loosely (==) instead of strict (===)\n   * @param {number} [options.limit=] limits the amount of documents to add to the result\n   * @returns {object[]}\n   */\n  find (query, options = {}) {\n    const { limit, loose } = options\n    const docs = this.documents\n\n    if (typeof query === 'undefined' || query === null) {\n      return filterDocs({ docs, limit, query: () => true })\n    }\n\n    const isArray = Array.isArray(query)\n    const queryType = typeof query\n\n    if (queryType === 'string') {\n      // string query is expected to be a primary key\n      const doc = this.keys.get(query)\n      return doc ? [doc.get()] : []\n    }\n\n    if (queryType === 'function') {\n      return filterDocs({ docs, limit, query })\n    }\n\n    if (queryType === 'object' && !isArray) {\n      const entries = Object.entries(query)\n      if (entries.length === 0) {\n        return filterDocs({ docs, limit, query: () => true })\n      }\n\n      const byMatcher = doc => entries.every(([key, value]) =>\n        toArray(value)\n          .some(val => loose\n            ? doc[key] == val // eslint-disable-line\n            : doc[key] === val))\n      return filterDocs({ docs, limit, query: byMatcher })\n    }\n\n    if (isArray) {\n      const subs = new Set()\n      const add = doc => limit > 0 && subs.size >= limit ? undefined : subs.add(doc)\n      for (const q of query) {\n        // beware this is a recursion, we hope you know what you are doing\n        this.find(q, { loose }).forEach(add)\n      }\n      return [...subs]\n    }\n\n    throw new Error(`Unsupported query type \"${queryType}\"`)\n  }\n}\n\n/***********\n * private *\n ***********/\n\n/**\n * Creates shallow copies of a list of given docs\n * @private\n * @param docs\n * @return {*}\n */\nconst copy = docs => docs.map(doc => ({ ...doc }))\n\n/**\n * Emitter function; extracted, so it can't be invoked from external.\n * @private\n * @param self\n * @param name\n * @param options\n * @return {*|number}\n */\nconst emit = (self, name, options) => {\n  const hooks = self.hooks.get(name)\n  return hooks && setTimeout(() => hooks.forEach(hook => hook(options)), 0)\n}\n/**\n * Extracts relevant properties to create options object\n * @private\n * @param primary\n * @param name\n * @return {{name, primary}}\n */\nconst getOptions = ({ primary, name }) => ({ primary, name })\n\n/**\n * Applies query to each document and adds the document to the list,\n * if conditions apply and (optional) limit is not reached.\n * @private\n * @param docs\n * @param query\n * @param limit\n * @return {object[]}\n */\nconst filterDocs = ({ docs, query, limit }) => {\n  const filtered = []\n\n  for (const wrapped of docs) {\n    const doc = wrapped.get()\n\n    if (query(doc)) {\n      filtered.push(doc)\n    }\n\n    if (limit > 0 && filtered.length >= limit) {\n      return filtered\n    }\n  }\n\n  return filtered\n}\n/**\n * Transform any incoming argument to an array.\n * @private\n * @param x {*}\n * @return {Array.<*>}\n */\nconst toArray = x => typeof x === 'undefined' ? [] : Array.isArray(x) ? x : [x]\nconst incrementKey = ((count) =>\n  (length = 16) => (++count).toString(10).padStart(length, '0'))(0)\n"],"names":[],"mappings":"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"}